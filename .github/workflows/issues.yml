# This is a basic workflow to help you get started with Actions

name: Issues

# Controls when the action will run. 
on:
  issues:
    types: [opened, edited, deleted, milestoned]
  
  issue_comment:
    types: [created, deleted, edited]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    if: ${{ !github.event.issue.pull_request }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo Hello, world!
          echo $github.event.issue
          env

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
            username: 'github-actions-tests',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `text: `Issue #${{ github.event.issue.number }} (${{github.event.issue.title }}) has been ${{github.event.action }} in ${process.env.AS_REPO} by ${{github.actor }}. Click here for more details: ${{github.event.issue.html_url }}``
            }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          GITHUB_ACTOR: ${{ env.GITHUB_ACTOR }}
        if: always()
